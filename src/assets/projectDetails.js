const projectDetails = [
    {name: "BookFinder", 
    tech:".Net5-API. React (Typescript)",
    story:"BookFinder App allows the user to login and search books with a keyword, using Google Books API. The user can add or remove books from the personal bookshelf, mark favorites, update the reading status, and make notes on each book.",
    git:"https://github.com/joyliao07/BookFinder_dotNetAndReact",
    deploy:"https://bookfinder-react-dotnet.herokuapp.com/",
    color: "(223, 218, 187)",
    colorHover: "(206, 202, 174)"},

    {name: "Portfolio", 
    tech:"React js. CSS Modules. Bootstrap5. JS Animation", 
    story: "The portfolio is built with React js and contains simple JavaScript animation. It showcases my tech stacks, projects, and volunteer experiences. You are welcome to send me a message by using the contact form on the website!",
    git:"https://github.com/joyliao07/portfolioReact",
    deploy:"https://jl-portfolio-react.herokuapp.com/",
    color: "(150,206,180)",
    colorHover: "(111, 170, 143)"},

    {name: "Wizard's Apprentice", 
    tech:"Flask. Python3. GoogleVision API. PostgreSQL", 
    story:"Wizard’s Apprentice is a photo-scavenger-hunt game on a social platform, using Google Vision to validate and analyze the player's photo submissions. The platform displays every player's competition results in real-time.",
    git:"https://github.com/joyliao07/wizards_apprentice",
    deploy:"",
    color: "(255,111,105)",
    colorHover: "(209, 90, 86)"},

    {name: "AirQuality App", 
    tech:"Angular. TypeScript. Node js. RESTful API.", 
    story:"AirQuality allows users to check the degrees of air pollution in cities worldwide, in real time, by reading the “aqius” index. Users can request new cities to be added to the website by filling out the contact form on the website.",
    git:"https://github.com/joyliao07/airQuality ",
    deploy:"https://airquality-app-ea704.web.app/",
    color: "(91,192,222)",
    colorHover: "(60, 164, 196)"},

    {name: "Raspberry Garden", 
    tech:"Django. Python3. RaspberryPi. PostgreSQL", 
    story:"With Raspberry Pi’s GPIO, the app monitors the water level and temperature of the garden environment and updates the results on the website.",
    git:"https://github.com/joyliao07/raspberry-garden",
    deploy:"",
    color: "(92,184,92)",
    colorHover: "(67, 136, 67)"},

    {name: "Stock Portfolio", 
    tech:"Flask. Python3. Jinja2 Template. IEXStock API", 
    story:"Stock portfolio allows the registered user to search for company stock prices and historic trends. The app displays the price trends in graphs and visual effects.",
    git:"https://github.com/joyliao07/stock_portfolio",
    deploy:"",
    color: "(255,204,92)",
    colorHover: "(209, 165, 70)"},

    {name: "GottaEat!App", 
    tech:"Node js.Express. JavaScript. Spoonacular API", 
    story:"The app utilizes the Spoonacular Recipe API, finding recipes that will match the ingredients the user already has.",
    git:"https://github.com/301-Project/gotta-eat-app  ",
    deploy:"",
    color: "(136,216,176)",
    colorHover: "(113, 179, 146)"},

    {name: "BlockBuster 2D", 
    tech:"Unity2D. C#", 
    story:"Block Buster 2D is a simple game with visual and sound effects. I built it as a fun project to understand more about game development with Unity.",
    git:"https://github.com/joyliao07/unity_BlockBreaker",
    deploy:"https://joyliao07.github.io/unity_BlockBreaker/BlockBreaker2DWebGL/index.html",
    color: "(255,238,173)",
    colorHover: "(212, 202, 158)"},
];

export default projectDetails;